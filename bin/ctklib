#!/usr/bin/perl -w
# $Id: ctklib 164 2013-10-17 10:48:00Z minus $
use strict;

=head1 NAME

ctklib - CTKlib project helper

=head1 VERSION

Version 1.14

=head1 SYNOPSIS

    ctklib [-d] [-t regular|tiny|module] [PROJECTNAME]
    ctklib [-di]
    ctklib-tiny [PROJECTNAME]

=head1 OPTIONS

=over 4

=item B<-d, --debug>

Enable debug mode

=item B<-h, --help>

Help page

=item B<-i, --interactive, --shell>

Interactive (shell) mode without creation of project

=item B<-t TYPE, --type=TYPE>

Select output's type your project. Supported types: "regular" (as default), "tiny" and "module".
For tiny projects please use follow command:

    ctklib-tiny [PROJECTNAME]

=item B<-v, --ver, --version>

Version of CTK module

=back

=head1 DESCRIPTION

Creating PROJECTNAME project with CTK

=head1 AUTHOR

Serz Minus (Lepenkov Sergey) L<http://www.serzik.ru> E<lt>minus@mail333.comE<gt>

=head1 COPYRIGHT

Copyright (C) 1998-2013 D&D Corporation. All Rights Reserved

=head1 LICENSE

This program is free software; you can redistribute it and/or modify it under the same terms and 
conditions as Perl itself.

This program is distributed under the GNU LGPL v3 (GNU Lesser General Public License version 3).

See C<LICENSE> file

=cut

use constant {
    PROJECTNAME => 'foo',
    TYPES       => [qw/regular tiny module/],
};
use Getopt::Long;
use Pod::Usage;
use Term::ReadLine ();
use Text::ParseWords qw(shellwords);

# Packages
use CTK;
use CTKx;
use CTK::Helper;

BEGIN {
    sub start { local $| = 1; print CTK::CTKCP @_ ? @_ : '' }
    sub finish { say(@_) }
    sub _{my $s=shift||'';my $l=length $s;$s.($l<70?('.'x(70-$l)):'').' '}
}

# Режимы команд
Getopt::Long::Configure ("bundling");
GetOptions(\%OPT, 
    "help|usage|h|u|man|?", # Помощь
    "version|ver|v",        # Текущая версия CTK
    "debug|d",              # Отладка
    "type|t=s",             # Regular | Tiny | Module
    "interactive|shell|i",  # Interactive
) || pod2usage(-exitval => 1, -verbose => 0);
pod2usage(-exitval => 0, -verbose => 2) if $OPT{help};

if ($OPT{version}) {
    say "CTKlib Version: ", CTK->VERSION;
    exit 0;
}

# Arguments
my $projectname   = @ARGV ? shift @ARGV : ''; # имя проекта
my $type = $OPT{type} || 'regular';
pod2usage(-exitval => 1, -verbose => 0) unless grep {$_ eq $type} @{(TYPES)};

START: debug "-"x16, " START ", tms," ","-"x16;
#########################
### START
#########################
my $c = new CTK( syspaths => 1 );
my $ctkx = CTKx->instance( c => $c );
if ($OPT{interactive}) {
    $ENV{TERM} = "dumb" if CTK::WIN;
    my $term = new Term::ReadLine('CTKlib');
    while ( defined ($_ = $term->readline("CTKlib> ")) ) { last if /^\s*(quit|exit)$/i;
        my @w = shellwords($_);
        if (@w) {
            $term->addhistory($_);
            my $command = shift @w;
            if ($command =~ /^(help|man|\?)/i) {
                say "USAGE:\n\t<command>";
                say "\t... any Perl command ...";
                say;
                say "\thelp:\t\tHelp page";
                say "\texit:\t\tExit";
            } else {
                my $res = eval(defined($_) ? $_ : "");
                warn $@ if $@;
            }
            say;
        }
    }
    goto FINISH;
}

$projectname =~ s/[^a-z0-9_\-]//ig;
unless ($projectname) {
    goto FINISH if $c->cli_prompt("Are you sure you want to create a new $type project?:", "yes") =~ /^n/i;
    $projectname = $c->cli_prompt("Please enter name of Your project in unix style:", PROJECTNAME);
}
exception("Invalid project's name!") if $projectname =~ /[^a-z0-9_\-]/i;
exception("Invalid project's name. Name must not be begun with a number!") if $projectname =~ /^\d/;

my $h = new CTK::Helper (
        -type           => $type,
        -projectname    => $projectname,
    );

start _ "Creating $type project \"$projectname\"...";
my $hstat = $h->build();
finish $hstat ? "OK" : "ERROR";

debug "The project \"$projectname\" was successfully created." if $hstat;

#########################
### FINISH
#########################
FINISH: debug "-"x16, " FINISH ", tms," ","-"x16;
exit(0);
1;
__END__
